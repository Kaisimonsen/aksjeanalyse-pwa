function parseCSV(t){const L=t.replace(/\r/g,'').split('\n').filter(x=>x.trim().length>0);const H=L[0].split(',').map(s=>s.trim());const R=L.slice(1).map(line=>{const p=line.split(',');const o={};H.forEach((h,i)=>o[h]=p[i]!==undefined?p[i].trim():'');return o});return{header:H,rows:R}};
function toNum(s){const v=Number(s);return Number.isFinite(v)?v:NaN}
function byDateAsc(a,b){return new Date(a.Date)-new Date(b.Date)}
function ema(v,span){const o=new Array(v.length).fill(NaN);if(v.length===0||span<=1)return o;const k=2/(span+1);let prev;for(let i=0;i<v.length;i++){const x=v[i];if(!Number.isFinite(x)){o[i]=NaN;continue}if(prev===undefined){if(i<span-1){o[i]=NaN;continue}let sum=0,c=0;for(let j=i-span+1;j<=i;j++){if(Number.isFinite(v[j])){sum+=v[j];c++}}if(c<span){o[i]=NaN;continue}prev=sum/span;o[i]=prev}else{prev=x*k+prev*(1-k);o[i]=prev}}return o}
function rsi(v,p=14){const o=new Array(v.length).fill(NaN);if(v.length<p+1)return o;let g=[],l=[];for(let i=1;i<=p;i++){const d=v[i]-v[i-1];g.push(Math.max(0,d));l.push(Math.max(0,-d))}let ag=g.reduce((a,b)=>a+b,0)/p;let al=l.reduce((a,b)=>a+b,0)/p;o[p]=100-(100/(1+(ag/(al||1e-12))));for(let i=p+1;i<v.length;i++){const d=v[i]-v[i-1];const gn=Math.max(0,d),lo=Math.max(0,-d);ag=(ag*(p-1)+gn)/p;al=(al*(p-1)+lo)/p;o[i]=100-(100/(1+(ag/(al||1e-12))))}return o}
function gen(rows){const c=rows.map(r=>toNum(r.Close)), o=rows.map(r=>toNum(r.Open));const e20=ema(c,20), e50=ema(c,50), rs=rsi(c,14);const buy=new Array(rows.length).fill(false), sell=new Array(rows.length).fill(false);for(let i=1;i<rows.length;i++){const up=(e20[i]>e50[i])&&!(e20[i-1]>e50[i-1]);const dn=(e20[i]<e50[i])&&!(e20[i-1]<e50[i-1]);buy[i]=up&&(rs[i]>=50);sell[i]=dn}let pos=0,en=0,tr=[];for(let i=0;i<rows.length-1;i++){if(pos===0&&buy[i]){pos=1;en=o[i+1];tr.push({Date:rows[i+1].Date,Action:'BUY',Price:o[i+1]})}else if(pos===1&&sell[i]){pos=0;tr.push({Date:rows[i+1].Date,Action:'SELL',Price:o[i+1],PnL:o[i+1]-en})}}if(pos===1){const last=rows.length-1;tr.push({Date:rows[last].Date,Action:'SELL_EOD',Price:c[last],PnL:c[last]-en})}const pnl=tr.reduce((s,t)=>s+(Number.isFinite(t.PnL)?t.PnL:0),0);const n=tr.filter(t=>t.Action.startsWith('SELL')).length;return{e20,e50,rs,buy,sell,stats:{total_pnl:pnl,num_trades:n,avg_pnl_per_trade:n?pnl/n:0}}}
let parsed=null;const $=s=>document.querySelector(s);
document.getElementById('loadBtn').addEventListener('click',async()=>{const f=document.getElementById('file').files[0];if(!f){alert('Velg en CSV-fil først.');return}const text=await f.text();const p=parseCSV(text);p.rows.sort(byDateAsc);parsed=p;document.getElementById('meta').textContent=`Lastet: ${f.name} – ${p.rows.length} rader.`;document.getElementById('stats').textContent='';document.querySelector('#table tbody').innerHTML='';});
document.getElementById('analyzeBtn').addEventListener('click',()=>{if(!parsed){alert('Last inn CSV først.');return}const r=gen(parsed.rows);const tb=document.querySelector('#table tbody');tb.innerHTML='';for(let i=0;i<parsed.rows.length;i++){const R=parsed.rows[i];const tr=document.createElement('tr');const cells=[R.Date,fmt(R.Open),fmt(R.Close),fmt(r.e20[i]),fmt(r.e50[i]),fmt(r.rs[i],1),r.buy[i]?'KJØP':'',r.sell[i]?'SALG':''];tr.innerHTML='<td>'+cells.join('</td><td>')+'</td>';tb.appendChild(tr)}const st=r.stats;document.getElementById('stats').textContent=`Trades: ${st.num_trades} | Total PnL: ${st.total_pnl.toFixed(2)} | Snitt per trade: ${st.avg_pnl_per_trade.toFixed(2)}`;window._lastResult={rows:parsed.rows,res:r}});
function fmt(v,d=2){const n=Number(v);return Number.isFinite(n)?n.toFixed(d):''}
document.getElementById('exportBtn').addEventListener('click',()=>{if(!window._lastResult){alert('Kjør analyse først.');return}const{rows,res}=window._lastResult;const h=['Date','Open','High','Low','Close','Adj Close','Volume','EMA_short','EMA_long','RSI','BUY','SELL'];let csv=h.join(',')+'\\n';for(let i=0;i<rows.length;i++){const r=rows[i];csv+=[r.Date,r.Open,r.High,r.Low,r.Close,r['Adj Close'],r.Volume,Number(res.e20[i])||'',Number(res.e50[i])||'',Number(res.rs[i])||'',res.buy[i]?1:0,res.sell[i]?1:0].join(',')+'\\n'};download(csv,'signals_export.csv')});
function download(t,fn){const b=new Blob([t],{type:'text/csv;charset=utf-8;'});const u=URL.createObjectURL(b);const a=document.createElement('a');a.href=u;a.download=fn;document.body.appendChild(a);a.click();document.body.removeChild(a);URL.revokeObjectURL(u)}
